# JavaScript/TypeScript Project Code Review Template
# Copy this file to .github/workflows/ai-code-review.yml in your repository

name: AI Code Review for JavaScript/TypeScript

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - '**.js'
      - '**.jsx'
      - '**.ts'
      - '**.tsx'
      - '**.vue'
      - '**.json'
      - 'package*.json'

jobs:
  review:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get PR diff
        id: diff
        run: |
          git diff origin/${{ github.base_ref }}...HEAD > pr_diff.txt
          DIFF_SIZE=$(stat -c%s pr_diff.txt 2>/dev/null || stat -f%z pr_diff.txt)
          if [ "$DIFF_SIZE" -gt 100000 ]; then
            echo "PR diff is too large for review (>100KB)" > pr_diff.txt
          fi
          
      - name: AI Code Review - JavaScript/TypeScript Focus
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          PR_DIFF=$(cat pr_diff.txt | head -c 50000)
          
          REQUEST_BODY=$(jq -n \
            --arg diff "$PR_DIFF" \
            '{
              "model": "claude-3-opus-20240229",
              "max_tokens": 4096,
              "messages": [{
                "role": "user",
                "content": "You are reviewing a JavaScript/TypeScript project. Please analyze the following code changes with special attention to:\n\n1. **JavaScript/TypeScript issues:**\n   - Type safety and type definitions\n   - Async/await and Promise handling\n   - Error handling and null checks\n   - ES6+ features usage\n   - Module imports/exports\n\n2. **React/Vue/Angular specifics (if applicable):**\n   - Component lifecycle and hooks\n   - State management patterns\n   - Props validation\n   - Event handling\n   - Rendering optimization\n\n3. **Performance:**\n   - Bundle size impact\n   - Memoization opportunities\n   - Unnecessary re-renders\n   - Memory leaks\n   - Network request optimization\n\n4. **Security:**\n   - XSS vulnerabilities\n   - Input validation\n   - Authentication/authorization\n   - Dependency vulnerabilities\n   - Environment variables handling\n\n5. **Code quality:**\n   - ESLint/Prettier compliance\n   - Test coverage\n   - Documentation (JSDoc/TSDoc)\n   - Accessibility (a11y)\n\nProvide specific code examples for improvements.\n\nPR Diff:\n\n\($diff)"
              }]
            }')
          
          REVIEW_RESPONSE=$(curl -s -w "\nHTTP_STATUS:%{http_code}" https://api.anthropic.com/v1/messages \
            -H "x-api-key: $ANTHROPIC_API_KEY" \
            -H "anthropic-version: 2023-06-01" \
            -H "content-type: application/json" \
            -d "$REQUEST_BODY")
          
          HTTP_STATUS=$(echo "$REVIEW_RESPONSE" | grep "HTTP_STATUS" | cut -d: -f2)
          RESPONSE_BODY=$(echo "$REVIEW_RESPONSE" | sed '/HTTP_STATUS/d')
          
          if [ "$HTTP_STATUS" -ne 200 ]; then
            echo "API call failed (Status: $HTTP_STATUS)" > review_comment.txt
            echo "$RESPONSE_BODY" >> review_comment.txt
          else
            REVIEW_CONTENT=$(echo "$RESPONSE_BODY" | jq -r '.content[0].text // "Unable to generate review"')
            echo "$REVIEW_CONTENT" > review_comment.txt
          fi
          
      - name: Post review comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const reviewContent = fs.readFileSync('review_comment.txt', 'utf8');
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `## ⚛️ AI Code Review for JavaScript/TypeScript\n\n${reviewContent}\n\n---\n*Specialized review for JavaScript/TypeScript best practices by Claude 3 Opus*`
            });